

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '9a88b7e7-a5c5-4094-bcc0-7706c54266de'

  # Web app name
  webAppName: 'mc-sales-uat'

  # Environment name
  environmentName: 'mc-sales-uat'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)



    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'

    - script: |
        #npm install -g serve
        #npm install
        yarn install
        #npm run build
      displayName: 'npm install and build '
      
    
    - script: 
        #npm run build
        yarn build
      displayName: 'npm build'


    - task: CopyFiles@2
      displayName: 'Copy files'
      inputs:
        sourceFolder: '$(System.DefaultWorkingDirectory)/build' 
        Contents: '**/*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        cleanTargetFolder: true
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        artifactName: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: 'Pay-As-You-Go (5b586977-f8bb-4da6-a6ae-1c9d07790eef)-8345'
              Action: 'Stop Azure App Service'
              WebAppName: 'mc-sales-uat'
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: mc-sales-uat'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              WebAppName: $(webAppName)
              RuntimeStack: 'NODE|14-lts'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              StartupCommand: 'npx serve -s'

          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: 'Pay-As-You-Go (5b586977-f8bb-4da6-a6ae-1c9d07790eef)-8345'
              Action: 'Start Azure App Service'
              WebAppName: 'mc-sales-uat'

